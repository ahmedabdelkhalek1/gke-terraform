# cloudbuild.yaml
options:
  logging: CLOUD_LOGGING_ONLY
  substitution_option: ALLOW_LOOSE

substitutions:
  _TERRAFORM_VERSION: '1.5.7'
  _WORKING_DIR: 'infra'
  _CLUSTER_NAME: 'my-cluster'
  _CLUSTER_LOCATION: 'us-central1'
  _PROJECT_ID: 'my-gcp-project'

steps:
  # Checkout code
  - name: gcr.io/cloud-builders/git
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git clone https://github.com/$$REPO_NAME.git
        cd $$REPO_NAME

  # Set up Terraform
  - name: hashicorp/terraform:${_TERRAFORM_VERSION}
    entrypoint: 'sh'
    args:
      - -c
      - |
        terraform -version
        cd ${_WORKING_DIR}
        terraform fmt -check -recursive
        terraform init
        terraform validate
        terraform plan

  # Terraform Apply
  - name: hashicorp/terraform:${_TERRAFORM_VERSION}
    entrypoint: 'sh'
    args:
      - -c
      - |
        cd ${_WORKING_DIR}
        terraform apply -auto-approve

  # Configure GKE Credentials
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: 'gke-auth'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud container clusters get-credentials ${_CLUSTER_NAME} --zone ${_CLUSTER_LOCATION} --project ${_PROJECT_ID}

  # Preview Kubernetes Manifests
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: 'dry-run'
    entrypoint: bash
    args:
      - -c
      - |
        kubectl apply --validate=false --dry-run=server \
          -f https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/master/release/kubernetes-manifests.yaml
        kubectl diff --server-side \
          -f https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/master/release/kubernetes-manifests.yaml || echo "Diff found"

  # Deploy Applications
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: 'deploy-apps'
    entrypoint: bash
    args:
      - -c
      - |
        kubectl apply --validate=false -f https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/master/release/kubernetes-manifests.yaml
        for i in {1..10}; do
          IP=$(kubectl get svc --field-selector spec.type=LoadBalancer -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')
          if [[ -n "$IP" ]]; then
            echo "External IP: $IP"
            exit 0
          fi
          echo "Attempt $i: no IP yet, sleeping..."
          sleep 15
        done
        echo "Timed out waiting for LoadBalancer IP" && exit 1

# [Optional] Slack Notification (You need to configure this via Pub/Sub or external trigger)
# Not handled directly here due to Cloud Build constraints
