name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
  workflow_dispatch:

# Define common environment variables
env:
  TERRAFORM_VERSION: 1.5.7
  PROJECT_ID: 'artful-fragment-458014-j4'
  WORKING_DIR: 'infra/environment'

permissions:
    contents: read
    id-token: write # Required for requesting the JWT

jobs:
  authenticate:
    name: GCP Authentication
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      auth_status: ${{ steps.auth.outputs.auth_status || 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/447195453845/locations/global/workloadIdentityPools/github-actions-pool/providers/github-gke-terraform'
          service_account: 'gke-terraform-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          
  terraform-checks:
    name: Terraform Init & Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: authenticate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/447195453845/locations/global/workloadIdentityPools/github-actions-pool/providers/github-gke-terraform'
          service_account: 'gke-terraform-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          
      - name: Terraform Cleanup
        run: rm -rf .terraform
        
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: infra
        
      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Validate Terraform Configuration
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform Configuration Plan Report
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}

  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: terraform-checks
    environment: production  # Add environment for approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/447195453845/locations/global/workloadIdentityPools/github-actions-pool/providers/github-gke-terraform'
          service_account: 'gke-terraform-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          
      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Confirm Infrastructure Deployment
        run: |
          echo "Infrastructure deployment completed successfully!"
      
        
  test-apps:
    name: Test Applications
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Tests
        run: |
          echo "Running application tests..."
          echo "Tests completed successfully!"
          
          
  deploy-applications:
    name: Deploy Applications
    runs-on: ubuntu-latest
    needs: test-apps
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: 'projects/447195453845/locations/global/workloadIdentityPools/github-actions-pool/providers/github-gke-terraform'
          service_account: 'gke-terraform-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          
      - name: Connect to GKE
        run: |
          echo "Setting up kubectl..."
          echo "Fetching cluster endpoint and auth data."
          echo "kubeconfig entry generated"
          
      - name: Deploy Applications
        run: |
          echo "Deploying applications..."
          echo "Application deployment completed!"
          
  notification:
    name: Failed pipeline notification
    runs-on: ubuntu-latest
    needs: [terraform-checks, test-apps, deploy-infrastructure, deploy-applications]
    if: ${{ always() && (contains(join(needs.*.result, ','), 'failure') || contains(join(needs.*.result,','), 'cancelled')) }}
    steps:
      - name: Notify on Slack
        run: echo "Sending Slack message about failed pipeline..."